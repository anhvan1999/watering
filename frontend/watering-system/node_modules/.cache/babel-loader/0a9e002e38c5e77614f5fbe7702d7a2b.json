{"ast":null,"code":"var _jsxFileName = \"/home/trongtrung/Shoto-kun/TTDADN/watering-system/frontend/watering-system/src/components/SensorInfo/SensorInfo.js\";\nimport React from 'react';\nimport style from './sensorInfo.scss';\nimport SensorInfoRow from './sensorInfo-row.js';\nimport SensorDetailRow from './sensor-detail-row.js';\nimport { connect } from 'react-redux';\nimport axios from '../../utils/axios-instance';\nimport { takeDataSensor } from '../../redux-store/actions/sensor-actions';\n\nclass SensorInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickturnTab = id => {\n      this.setState({\n        show: false,\n        sensorID: id\n      });\n    };\n\n    this.considerState = value => {\n      if (value >= 700) {\n        return \"Ẩm\";\n      }\n\n      if (value >= 450 && value < 700) {\n        return \"Bình thường\";\n      }\n\n      return \"Khô\";\n    };\n\n    this.updateInfo = () => {\n      this.setState({\n        state: this.state\n      });\n      console.log('Update Info');\n    };\n\n    this.state = {\n      show: true,\n      sensorID: 0\n    };\n    this.onClickturnTab = this.onClickturnTab.bind(this);\n    this.updateInfo = this.updateInfo.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    axios.get('/sensor/list', {\n      headers: {\n        'Authorization': `jwt ${this.props.token}`\n      }\n    }).then(res => {\n      let data = res.data;\n\n      for (let item of data) {\n        this.props.setList({\n          sensor: {\n            deviceId: 'Mois'\n          },\n          value: item.currentValue\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sensor-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-sensor-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Th\\xF4ng tin c\\u1EA3m bi\\u1EBFn\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, \"C\\u1EA3m bi\\u1EBFn\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, \"S\\u1ED1 \\u0111o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }, \"Tr\\u1EA1ng th\\xE1i\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }, \"Xem chi ti\\u1EBFt\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, this.props.sensor.map(x => {\n      if (x.devicedid != \"\") {\n        return /*#__PURE__*/React.createElement(SensorInfoRow, {\n          id: x.deviceId,\n          measure: x.value,\n          key: x.deviceId,\n          state: this.considerState,\n          func: this.onClickturnTab,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 49\n          }\n        });\n      }\n    })))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  let result = {\n    sensor: state.sensor,\n    token: state.user.jwtToken\n  };\n  console.log(state);\n  return result;\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setList: data => {\n      dispatch(takeDataSensor(data));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SensorInfo);","map":{"version":3,"sources":["/home/trongtrung/Shoto-kun/TTDADN/watering-system/frontend/watering-system/src/components/SensorInfo/SensorInfo.js"],"names":["React","style","SensorInfoRow","SensorDetailRow","connect","axios","takeDataSensor","SensorInfo","Component","constructor","props","onClickturnTab","id","setState","show","sensorID","considerState","value","updateInfo","state","console","log","bind","componentDidMount","get","headers","token","then","res","data","item","setList","sensor","deviceId","currentValue","catch","error","render","map","x","devicedid","mapStateToProps","result","user","jwtToken","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport style from './sensorInfo.scss';\n\nimport SensorInfoRow from './sensorInfo-row.js';\nimport SensorDetailRow from './sensor-detail-row.js';\n\nimport { connect } from 'react-redux';\nimport axios from '../../utils/axios-instance';\nimport { takeDataSensor } from '../../redux-store/actions/sensor-actions';\n\n\nclass SensorInfo extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: true,\n            sensorID: 0\n        }\n        this.onClickturnTab = this.onClickturnTab.bind(this);\n        this.updateInfo = this.updateInfo.bind(this);\n    }\n\n    onClickturnTab = (id) => {\n        this.setState({ show: false, sensorID: id });\n    }\n\n    considerState = (value) => {\n        if (value >= 700) {\n            return \"Ẩm\";\n        }\n        if (value >= 450 && value < 700) {\n            return \"Bình thường\";\n        }\n        return \"Khô\";\n    }\n\n    updateInfo = () => {\n        this.setState({ state: this.state });\n        console.log('Update Info');\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n        axios.get('/sensor/list', {\n            headers: {\n                'Authorization': `jwt ${this.props.token}`\n            }\n        }).then(res => {\n            let data = res.data;\n            for (let item of data) {\n                this.props.setList({\n                    sensor: {\n                        deviceId: 'Mois'\n                    },\n                    value: item.currentValue\n                });\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"sensor-info\">\n                <div className=\"list-sensor-info\">\n                    <h1>Thông tin cảm biến</h1>\n                    <table className=\"table table-hover\">\n                        <thead className=\"thead-light\">\n                            <tr>\n                                <th>Cảm biến</th>\n                                <th>Số đo</th>\n                                <th>Trạng thái</th>\n                                <th>Xem chi tiết</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.props.sensor.map(x => {\n                                    if (x.devicedid != \"\") {\n                                        return (<SensorInfoRow id={x.deviceId} measure={x.value} key={x.deviceId} state={this.considerState} func={this.onClickturnTab}></SensorInfoRow>)\n                                    }\n                                })\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    let result = {\n        sensor: state.sensor,\n        token: state.user.jwtToken\n    };\n    console.log(state);\n    return result;\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setList: (data) => { dispatch(takeDataSensor(data)); }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SensorInfo);\n"]},"metadata":{},"sourceType":"module"}