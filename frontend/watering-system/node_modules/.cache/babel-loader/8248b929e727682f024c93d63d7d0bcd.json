{"ast":null,"code":"import SockJS from 'sockjs-client';\nimport Stomp from 'stompjs'; // Create connection via sockjs and stompjs\n\nconst sock = new SockJS(process.env.REACT_APP_API_ROOT + '/stomp');\nconst stompClient = Stomp.over(sock); // On connected\n\nstompClient.connect({}, frame => {\n  console.log(\"connected\", frame);\n  stompClient.subscribe(\"/topic/info\", data => {\n    console.log(\"receive\", data);\n  });\n  stompClient.subscribe(\"/topic/sensor\", data => {\n    let sensorData = JSON.parse(data.body);\n    console.log(new Date(sensorData.publishTime));\n  });\n\n  for (let i = 0; i < 2; ++i) {\n    stompClient.send(\"/app/info\", {}, \"\");\n  }\n});\n\nfunction send(msg) {\n  stompClient.send(\"/app/info\", {}, JSON.stringify({\n    msg\n  }));\n}\n\nconsole.log('RUNNN');\nexport default stompClient;","map":{"version":3,"sources":["/home/trongtrung/Shoto-kun/TTDADN/watering-system/frontend/watering-system/src/service/ws-service.js"],"names":["SockJS","Stomp","sock","process","env","REACT_APP_API_ROOT","stompClient","over","connect","frame","console","log","subscribe","data","sensorData","JSON","parse","body","Date","publishTime","i","send","msg","stringify"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AACA,MAAMC,IAAI,GAAG,IAAIF,MAAJ,CAAWG,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAAiC,QAA5C,CAAb;AACA,MAAMC,WAAW,GAAGL,KAAK,CAACM,IAAN,CAAWL,IAAX,CAApB,C,CAEA;;AACAI,WAAW,CAACE,OAAZ,CAAoB,EAApB,EAAwBC,KAAK,IAAI;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAzB;AAEAH,EAAAA,WAAW,CAACM,SAAZ,CAAsB,aAAtB,EAAqCC,IAAI,IAAI;AACzCH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,IAAvB;AACH,GAFD;AAIAP,EAAAA,WAAW,CAACM,SAAZ,CAAsB,eAAtB,EAAuCC,IAAI,IAAI;AAC3C,QAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,IAAhB,CAAjB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIO,IAAJ,CAASJ,UAAU,CAACK,WAApB,CAAZ;AACH,GAHD;;AAKA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuB,EAAEA,CAAzB,EAA4B;AACxBd,IAAAA,WAAW,CAACe,IAAZ,CAAiB,WAAjB,EAA8B,EAA9B,EAAkC,EAAlC;AACH;AAEJ,CAhBD;;AAkBA,SAASA,IAAT,CAAcC,GAAd,EAAmB;AACfhB,EAAAA,WAAW,CAACe,IAAZ,CAAiB,WAAjB,EAA8B,EAA9B,EAAkCN,IAAI,CAACQ,SAAL,CAAe;AAC7CD,IAAAA;AAD6C,GAAf,CAAlC;AAGH;;AAEDZ,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEA,eAAeL,WAAf","sourcesContent":["import SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\n\n// Create connection via sockjs and stompjs\nconst sock = new SockJS(process.env.REACT_APP_API_ROOT + '/stomp');\nconst stompClient = Stomp.over(sock);\n\n// On connected\nstompClient.connect({}, frame => {\n    console.log(\"connected\", frame);\n\n    stompClient.subscribe(\"/topic/info\", data => {\n        console.log(\"receive\", data);\n    });\n\n    stompClient.subscribe(\"/topic/sensor\", data => {\n        let sensorData = JSON.parse(data.body);\n        console.log(new Date(sensorData.publishTime));\n    });\n\n    for (let i = 0; i < 2; ++i) {\n        stompClient.send(\"/app/info\", {}, \"\");\n    }\n\n});\n\nfunction send(msg) {\n    stompClient.send(\"/app/info\", {}, JSON.stringify({\n        msg\n    }));\n}\n\nconsole.log('RUNNN');\n\nexport default stompClient;\n"]},"metadata":{},"sourceType":"module"}