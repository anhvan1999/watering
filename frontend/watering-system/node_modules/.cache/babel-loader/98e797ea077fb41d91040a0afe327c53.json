{"ast":null,"code":"import { actionTypes } from '../actions/sensor-actions';\n\nfunction objectsensor(deviceid, data) {\n  this.deviceid = deviceid;\n  this.data = data;\n}\n\nvar ob = new objectsensor(\"\", \"\");\nlet defaultState = [ob];\n\nfunction sensorReducer(state = defaultState, action) {\n  if (action.type === actionTypes.TAKE_DATA_SENSOR) {\n    var i;\n    var found = false;\n\n    for (i = 0; i < state; i++) {\n      if (action.data.sensor.deviceId == state[i].deviceid) {\n        state[i].deviceid = action.data;\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      var obj = new objectsensor(action.data.sensor.deviceId, action.data);\n      state.push(obj);\n    }\n  }\n\n  return state;\n}\n\nexport default sensorReducer;","map":{"version":3,"sources":["/home/trongtrung/Shoto-kun/TTDADN/watering-system/frontend/watering-system/src/redux-store/reducers/sensor-reducer.js"],"names":["actionTypes","objectsensor","deviceid","data","ob","defaultState","sensorReducer","state","action","type","TAKE_DATA_SENSOR","i","found","sensor","deviceId","obj","push"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,2BAA1B;;AAEA,SAASC,YAAT,CAAuBC,QAAvB,EAAgCC,IAAhC,EAAqC;AACjC,OAAKD,QAAL,GAAgBA,QAAhB;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACH;;AACD,IAAIC,EAAE,GAAG,IAAIH,YAAJ,CAAiB,EAAjB,EAAoB,EAApB,CAAT;AACA,IAAII,YAAY,GAAG,CACfD,EADe,CAAnB;;AAIA,SAASE,aAAT,CAAuBC,KAAK,GAAGF,YAA/B,EAA6CG,MAA7C,EAAqD;AAEjD,MAAIA,MAAM,CAACC,IAAP,KAAgBT,WAAW,CAACU,gBAAhC,EAAkD;AAC9C,QAAIC,CAAJ;AACA,QAAIC,KAAK,GAAG,KAAZ;;AACA,SAAKD,CAAC,GAAC,CAAP,EAASA,CAAC,GAAGJ,KAAb,EAAmBI,CAAC,EAApB,EAAuB;AACnB,UAAIH,MAAM,CAACL,IAAP,CAAYU,MAAZ,CAAmBC,QAAnB,IAA8BP,KAAK,CAACI,CAAD,CAAL,CAAST,QAA3C,EAAoD;AAChDK,QAAAA,KAAK,CAACI,CAAD,CAAL,CAAST,QAAT,GAAoBM,MAAM,CAACL,IAA3B;AACAS,QAAAA,KAAK,GAAE,IAAP;AACA;AACH;AACJ;;AACD,QAAI,CAACA,KAAL,EACA;AACI,UAAIG,GAAG,GAAG,IAAId,YAAJ,CAAiBO,MAAM,CAACL,IAAP,CAAYU,MAAZ,CAAmBC,QAApC,EAA6CN,MAAM,CAACL,IAApD,CAAV;AACAI,MAAAA,KAAK,CAACS,IAAN,CAAWD,GAAX;AACH;AACJ;;AAED,SAAOR,KAAP;AACH;;AAED,eAAeD,aAAf","sourcesContent":["import {actionTypes} from '../actions/sensor-actions'\n\nfunction objectsensor (deviceid,data){\n    this.deviceid = deviceid\n    this.data = data\n}\nvar ob = new objectsensor(\"\",\"\");\nlet defaultState = [\n    ob\n];\n\nfunction sensorReducer(state = defaultState, action) {\n    \n    if (action.type === actionTypes.TAKE_DATA_SENSOR) {\n        var i;\n        var found = false;\n        for (i=0;i < state;i++){\n            if (action.data.sensor.deviceId== state[i].deviceid){\n                state[i].deviceid = action.data;\n                found= true;\n                break;\n            }\n        }\n        if (!found) \n        {   \n            var obj = new objectsensor(action.data.sensor.deviceId,action.data)\n            state.push(obj);\n        }\n    }\n   \n    return state;\n}\n\nexport default sensorReducer;\n"]},"metadata":{},"sourceType":"module"}